How did viewing a diff between two versions of a file help you see the bug that 
was introduced?

   
It is much easier to find bugs using the FC tool than having to do it manually.



How could having easy access to the entire history of a file make you a more
 efficient programmer in the long term?

   

If you were to make a simple syntax error, you would be able to compare a previous version of your file to the newest one to find where you've made a mistake.




What do you think are the pros and cons of manually choosing when to create a 
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

 


 Pros: You are able to choose where exactly you want to commit and it wont save at a random point.

Cons: You might not always know when it's a good time to commit. 




Why do you think some version control systems, like Git, allow saving multiple
 files in one commit, while others, like Google Docs, treat each file separately?

  

Its not necessary for all types of version control systems to save multiple files in one commit.





How can you use the commands git log and git diff to view the history of files?

  

  Git log shows a list of the recent commits with information about them and git diff compares the two versions
of the code.


How might using version control make you more confident to make changes that
could break something?

  

By using version control i know that i have pervious versions of my work saved incase i break something.



Now that you have your workspace set up, what do you want to try using Git for?

  

I want to use Git to work on different assignments.